pipeline {
    agent any
 environment {
 report_file="${WORKSPACE}/report"
 COMPILER=${COMP_NAME}
 USER=credentials('DOCKERHUB_USER')
 PASS=credentials('DOCKERHUB_PASSWORD')	
	}  
stages {
	    stage (hello) {
            steps {
	    sh '''
	    echo "hello this is build number ${BUILD_NUMBER} results:" >> ${report_file}
	    '''
	    }
	    }
	    stage(scm) {
		steps {
		checkout scm
		sh '''
		echo "downloading from github" 
		echo "downloading from github" >> ${report_file}
		echo "changing permissions" 
		echo "changing permissions" >> ${report_file}
		cd ${WORKSPACE}/scripts
		chmod 755 *'''
		 }
		 }	
		
		stage(bash) {
		steps {
		sh ''' if [ $COMPILER = "bash" ] | [ $COMPILER = "all" ]; then
		echo "creating docker imagefile for bash file"
	        cd ${WORKSPACE}
	        echo '''FROM ubuntu
	        COPY ./scripts/bash.sh /app
	        WORKDIR /app
	        CMD bash /app/bash.sh '''> Dockerfile
		echo "running bash file" >> ${report_file}
                bash ${WORKSPACE}/scripts/bashfile.sh
		fi'''         	
		}
	 	}
	    stage(python) {
		
	       steps {
	       sh ''' if [ $COMPILER = "python" ] | [ $COMPILER = "all" ]; then
               echo "creating docker imagefile for bash file"
	       cd ${WORKSPACE}
	       echo '''FROM python:3.7-alpine
	       COPY ./scripts/python.py /app
	       WORKDIR /app
	       CMD python /app/python.py '''> Dockerfile
	             
	       echo "running python file" 
	       echo "running python file" >> ${report_file}
	       python ${WORKSPACE}/scripts/pyfile.py
	       fi'''       
		 }
		 }	
    stage(c) {
	       steps {
	      sh ''' if [ $COMPILER = "cpp" ] | [ $COMPILER = "all" ]; then
	      echo "creating docker imagefile for bash file"
              cd ${WORKSPACE}
	      echo '''FROM gcc
                      COPY ./scripts/python.c /app
		      run gcc -o /app/app /app/cpp.c
		      run chmod 777 /app/app
		      cmd /app/app'''> Dockerfile
	      
	      gcc ${WORKSPACE}/scripts/cfile.c -o crunfile
	      echo "running compiled file"
	      echo "running compiled file"  >> ${report_file}
              ${WORKSPACE}/crunfile
	      fi'''
		         }
	         }	
        }
        post {
    success {sh '''echo "result success"
    		   echo "result success" >> ${report_file}'''}
    failure {sh '''echo "result failure"
    		   echo "result failure " >> ${report_file}'''}
    }}
