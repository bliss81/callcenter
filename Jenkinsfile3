pipeline {
    agent { label 'docker1' }
 environment {
 report_file="${WORKSPACE}/report"
 COMPILER="${COMP_NAME}"
 USER=credentials('DOCKERHUB_USER')
 PASS=credentials('DOCKERHUB_PASSWORD')	
	}  
stages {
	    stage (hello) {
            steps {
	    sh '''
	    echo "hello this is build number ${BUILD_NUMBER} results:" >> ${report_file}
	    '''
	    }
	    }
	    stage(scm) {
		steps {
		checkout scm
		sh '''
		echo "downloading from github" 
		echo "downloading from github" >> ${report_file}
		echo "changing permissions" 
		echo "changing permissions" >> ${report_file}
		cd ${WORKSPACE}/scripts
		chmod 755 *'''
		 }
		 }	
		
		stage(bash) {
		steps {
		sh '''
		if [ "$COMPILER" == "bash" ] | [ "$COMPILER" == "all" ]; then
		echo "creating dockerfile for bash code"
	        cd ${WORKSPACE}
	        echo "FROM ubuntu" > Dockerfile" >> Dockerfile
	        echo "RUN mkdir /home/doron && cd /home/doron" >> Dockerfile
		echo "COPY ./scripts/bash.sh /home/doron" >> Dockerfile
	        echo "WORKDIR /home/doron" >> Dockerfile
	        echo "CMD bash /home/doron/bash.sh >> Dockerfile
		echo "building bash docker image" 
		echo "building bash docker image" >> ${report_file}
		docker build -t bashimg:${BUILD_NUMBER} . && docker run bashimg:${BUILD_NUMBER}
		fi'''         	
		}
	 	}
	    stage(python) {
	       steps {
	       sh ''' 
	       if [ "$COMPILER" == "python" ] | [ "$COMPILER" == "all" ]; then
               echo "creating docker imagefile for bash file"
	       cd ${WORKSPACE}
	       echo "FROM python:3.7-alpine" > Dockerfile
	       echo "COPY ./scripts/python.py /app" >> Dockerfile
	       echo "WORKDIR /app" >> Dockerfile
	       echo "CMD python /app/python.py" >> Dockerfile
	       echo "running python file" 
	       echo "running python file" >> ${report_file}
	       python ${WORKSPACE}/scripts/pyfile.py
	       fi'''       
		 }
		 }	
    stage(c) {
	       steps {
	      sh ''' if [ "$COMPILER" == "cpp" ] | [ "$COMPILER" == "all" ]; then
	      echo "creating docker imagefile for bash file"
              cd ${WORKSPACE}
	      echo "FROM gcc" > Dockerfile
              echo "COPY ./scripts/python.c /app" >> Dockerfile
		echo "run gcc -o /app/app /app/cpp.c" >> Dockerfile
		echo "run chmod 777 /app/app" >> Dockerfile
		echo "cmd /app/app" >> Dockerfile" 
	      gcc ${WORKSPACE}/scripts/cfile.c -o crunfile
	      echo "running compiled file"
	      echo "running compiled file"  >> ${report_file}
              ${WORKSPACE}/crunfile
	      fi'''
		         }
	         }	
        }
        post {
    success {sh '''echo "result success"
    		   echo "result success" >> ${report_file}'''}
    failure {sh '''echo "result failure"
    		   echo "result failure " >> ${report_file}'''}
    }}
